generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_NEON")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    String   @db.VarChar(255)
  authorId  Int
}

model League {
  id                 String    @id @default(cuid())
  leagueId           String
  leagueName       String
  leagueColor         String
  isActive   Boolean @default(true)
  leagueSport  Int

  @@unique([leagueId])
}

// model zzTable {
//   id                 String    @id @default(cuid())
//   zzTableId           String

//   @@unique([zzTableId])
// }

// model Account {
//   id                 String    @id @default(cuid())
//   userId             String
//   providerType       String
//   providerId         String
//   providerAccountId  String
//   refreshToken       String?
//   accessToken        String?
//   accessTokenExpires DateTime?
//   createdAt          DateTime  @default(now())
//   updatedAt          DateTime  @updatedAt
//   user               User      @relation(fields: [userId], references: [id])

//   @@unique([providerId, providerAccountId])
// }

// model navigation {
//   navigation_id    Int       @id @default(autoincrement())
//   nav_name         String    @db.VarChar(40)
//   nav_link         String?   @db.VarChar(100)
//   nav_image        String?   @db.VarChar(100)
//   created_date     DateTime? @default(now()) @db.Timestamp(6)
//   nav_level        String?   @db.VarChar(10)
//   nav_one_level_up String?   @db.VarChar(80)
// }

// model pages {
//   page_id          Int       @id @default(autoincrement())
//   page_name        String    @db.VarChar(100)
//   page_title       String?   @db.VarChar(200)
//   page_description String?   @db.VarChar(2000)
//   created_date     DateTime? @default(now()) @db.Timestamp(6)
//   is_active        Boolean?  @default(false)
//   is_draft         Boolean?  @default(true)
//   page_body        String?   @db.VarChar(30000)
//   page_directory   String?   @db.VarChar(500)
// }

// model playing_with_neon {
//   id    Int    @id @default(autoincrement())
//   name  String
//   value Float? @db.Real
// }

// model Session {
//   id           String   @id @default(cuid())
//   userId       String
//   expires      DateTime
//   sessionToken String   @unique
//   accessToken  String   @unique
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @updatedAt
//   user         User     @relation(fields: [userId], references: [id])
// }

// model User {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   emailVerified DateTime?
//   image         String?
//   role          String?
//   createdAt     DateTime  @default(now())
//   updatedAt     DateTime  @updatedAt
//   accounts      Account[]
//   sessions      Session[]
// }

// model VerificationRequest {
//   id         String   @id @default(cuid())
//   identifier String
//   token      String   @unique
//   expires    DateTime
//   createdAt  DateTime @default(now())
//   updatedAt  DateTime @updatedAt

//   @@unique([identifier, token])
// }

// model Contact {
//   contact_id    String   @id @default(cuid())
//   name          String
//   email_address String
//   message       String
//   date_created  DateTime @default(now())
// }
